// <auto-generated />
using System;
using FantasyFights.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FantasyFights.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231016122254_RefreshTokenMigration")]
    partial class RefreshTokenMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FantasyFights.DAL.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Class")
                        .HasColumnType("int")
                        .HasColumnName("class");

                    b.Property<int>("Defence")
                        .HasColumnType("int")
                        .HasColumnName("defence");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int")
                        .HasColumnName("hit_points");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int")
                        .HasColumnName("intelligence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("Strength")
                        .HasColumnType("int")
                        .HasColumnName("strength");

                    b.HasKey("Id");

                    b.ToTable("character", (string)null);
                });

            modelBuilder.Entity("FantasyFights.DAL.Entities.EmailConfirmationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("ExpirationDateAndTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiration_date_and_time");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<string>("ValueHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("value_hash");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("email_confirmation_codes", (string)null);
                });

            modelBuilder.Entity("FantasyFights.DAL.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("ExpirationDateAndTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiration_date_and_time");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<string>("ValueHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("value_hash");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("FantasyFights.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("FantasyFights.DAL.Entities.EmailConfirmationCode", b =>
                {
                    b.HasOne("FantasyFights.DAL.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FantasyFights.DAL.Entities.RefreshToken", b =>
                {
                    b.HasOne("FantasyFights.DAL.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
